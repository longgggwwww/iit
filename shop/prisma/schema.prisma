generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int        @id @default(autoincrement())
  site       String?
  username   String     @unique
  password   String
  isAdmin    Boolean    @default(false)
  isActive   Boolean    @default(false)
  roleId     Int
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  branchs    Branch[]
  brands     Brand[]
  categories Category[]
  products   Product[]
  profile    Profile?
  role       Role       @relation(fields: [roleId], references: [id])

  @@unique([site, username])
}

model Profile {
  id      Int       @id @default(autoincrement())
  name    String?
  dob     DateTime?
  gender  Gender    @default(OTHER)
  email   String?   @unique
  phone   String?   @unique
  photo   String?
  address String?
  userId  Int       @unique
  user    User      @relation(fields: [userId], references: [id])
}

model Role {
  id          Int      @id @default(autoincrement())
  name        String
  code        String   @unique
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  permissions String[]
  users       User[]
}

model Branch {
  id          Int      @id @default(autoincrement())
  name        String
  phone       String?  @unique
  email       String?  @unique
  address     String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  createdById Int?
  createdBy   User?    @relation(fields: [createdById], references: [id])
}

model Brand {
  id          Int       @id @default(autoincrement())
  name        String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  createdById Int?
  createdBy   User?     @relation(fields: [createdById], references: [id])
  products    Product[]
}

model Product {
  id           String    @id @unique
  barcode      String?   @unique
  name         String
  images       String[]
  costPrice    Float
  sellingPrice Float
  inventory    Int
  inventoryMin Int?
  inventoryMax Int?
  weight       Float?
  description  String?
  note         String?
  categoryId   Int?
  createdById  Int?
  brandId      Int?
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  brand        Brand?    @relation(fields: [brandId], references: [id])
  category     Category? @relation(fields: [categoryId], references: [id])
  createdBy    User?     @relation(fields: [createdById], references: [id])
  tags         Tag[]
}

model Category {
  id          Int       @id @default(autoincrement())
  name        String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  createdById Int?
  createdBy   User?     @relation(fields: [createdById], references: [id])
  products    Product[]
  tags        Tag[]
}

model Tag {
  id         Int       @id @default(autoincrement())
  label      String
  categoryId Int?
  productId  String?
  category   Category? @relation(fields: [categoryId], references: [id])
  product    Product?  @relation(fields: [productId], references: [id])
}

model Store {
  id   Int    @id @default(autoincrement())
  name String
}

enum Gender {
  MALE
  FEMALE
  OTHER
}
